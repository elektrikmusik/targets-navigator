version: "3.7"

services:
  targets-navigator:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
        - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
        - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
    container_name: targets-navigator-prod
    restart: unless-stopped
    ports:
      - "9090:80"
    environment:
      - NODE_ENV=production
      - TZ=UTC
    labels:
      - traefik.enable=true
      - traefik.http.routers.targets-navigator.rule=Host(`${DOMAIN_NAME}`)
      - traefik.http.routers.targets-navigator.tls=true
      - traefik.http.routers.targets-navigator.entrypoints=web,websecure
      - traefik.http.routers.targets-navigator.tls.certresolver=mytlschallenge
      - traefik.http.middlewares.targets-navigator.headers.SSLRedirect=true
      - traefik.http.middlewares.targets-navigator.headers.STSSeconds=315360000
      - traefik.http.middlewares.targets-navigator.headers.browserXSSFilter=true
      - traefik.http.middlewares.targets-navigator.headers.contentTypeNosniff=true
      - traefik.http.middlewares.targets-navigator.headers.forceSTSHeader=true
      - traefik.http.middlewares.targets-navigator.headers.SSLHost=${DOMAIN_NAME}
      - traefik.http.middlewares.targets-navigator.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.targets-navigator.headers.STSPreload=true
      - traefik.http.routers.targets-navigator.middlewares=targets-navigator@docker
      - traefik.http.services.targets-navigator.loadbalancer.server.port=80
    networks:
      - traefik
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.2"
        reservations:
          memory: 64M

networks:
  traefik:
    driver: bridge
