name: Deploy to VPS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run linter
        run: npm run lint

      - name: Build application
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          script: |
            set -e

            echo "🚀 Starting deployment process..."
            echo "Timestamp: $(date)"

            # Navigate to application directory
            cd /opt/targets-navigator || { echo "❌ Failed to navigate to app directory"; exit 1; }

            # Pull latest changes
            echo "📥 Pulling latest changes..."
            git pull origin main || { echo "❌ Failed to pull changes"; exit 1; }

            # Check if required files exist
            if [ ! -f docker-compose.prod.yml ]; then
              echo "❌ docker-compose.prod.yml not found"
              exit 1
            fi

            # Stop existing containers
            echo "🛑 Stopping existing containers..."
            docker-compose -f docker-compose.prod.yml down || true

            # Build new containers
            echo "🔨 Building new containers..."
            docker-compose -f docker-compose.prod.yml build --no-cache || { echo "❌ Build failed"; exit 1; }

            # Start containers
            echo "🚀 Starting containers..."
            docker-compose -f docker-compose.prod.yml up -d || { echo "❌ Failed to start containers"; exit 1; }

            # Wait for application to start
            echo "⏳ Waiting for application to start..."
            sleep 15

            # Health check (check internal port)
            echo "🏥 Performing health check..."
            if docker-compose -f docker-compose.prod.yml exec targets-navigator curl -f http://localhost > /dev/null 2>&1; then
              echo "✅ Health check passed"
            else
              echo "❌ Health check failed"
              docker-compose -f docker-compose.prod.yml logs --tail=20
              exit 1
            fi

            # Clean up old Docker images
            echo "🧹 Cleaning up old Docker images..."
            docker system prune -f || true

            echo "✅ Deployment successful! Application is running behind Traefik at https://targets.srv903155.hstgr.cloud"
            echo "🕐 Deployment completed at: $(date)"
